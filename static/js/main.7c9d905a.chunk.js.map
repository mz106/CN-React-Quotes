{"version":3,"sources":["components/Title.jsx","components/QuoteGen.js","App.js","index.js"],"names":["TopTitle","styled","h1","Title","QuoteGen","useState","quote","setQuote","QuoteWrapper","QuotePlace","QuoteBtn","onClick","fetch","then","response","json","data","value","div","p","button","Wrapper","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAWA,I,MAAMA,EAAWC,IAAOC,GAAV,oKASCC,EAhBf,WAEI,OACA,cAACH,EAAD,6BCDW,SAASI,IAEpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBACA,GADA,UAC0BA,oBAAS,IAAnC,6BAUE,OACE,qCACI,cAAC,EAAD,IACA,cAACG,EAAD,UACI,cAACC,EAAD,UAAaH,MAGjB,cAACI,EAAD,CAAUC,QAflB,WACIC,MAAM,2CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJT,EAASS,EAAKC,WAWb,sBAMZ,I,EAAMT,EAAeP,IAAOiB,IAAV,iMAUZT,EAAaR,IAAOkB,EAAV,gHAOVT,EAAWT,IAAOmB,OAAV,iHCtBd,IAAMC,EAAUpB,IAAOiB,IAAV,6LAUEI,EAjCf,WAgBE,OACE,cAACD,EAAD,UACE,cAACjB,EAAD,OCjBNmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7c9d905a.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Title() {\r\n\r\n    return (\r\n    <TopTitle>Chuck Norris!</TopTitle>\r\n    )\r\n}\r\n\r\nconst TopTitle = styled.h1`\r\n    border: 1px solid black;\r\n    width: 80%;\r\n    font-size: 4rem;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    padding: 1.5em;\r\n`\r\n\r\nexport default Title;","\r\nimport React, { useState, useEffect} from 'react';\r\nimport App from '../App';\r\nimport styled from 'styled-components';\r\nimport Title from './Title';\r\n\r\nexport default function QuoteGen() {\r\n\r\n    const [quote, setQuote] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    function handleFetch() {\r\n        fetch('https://api.chucknorris.io/jokes/random')\r\n         .then(response => response.json())\r\n         .then(data => {\r\n           setQuote(data.value)\r\n         })\r\n      }\r\n\r\n      return (\r\n        <>  \r\n            <Title />\r\n            <QuoteWrapper>\r\n                <QuotePlace>{quote}</QuotePlace>\r\n            </QuoteWrapper>\r\n            \r\n            <QuoteBtn onClick={handleFetch}>click</QuoteBtn>\r\n            \r\n        </>\r\n      )\r\n}\r\n\r\nconst QuoteWrapper = styled.div`\r\n    width: 80%;\r\n    height: 30%;\r\n    margin: 0 auto;\r\n    border: 1px solid black;\r\n    display: flex;\r\n    flex-direction: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst QuotePlace = styled.p`\r\n    font-size: 1.5rem;\r\n    width: 80%;\r\n    height: 50%;\r\n    text-align: center;\r\n`\r\n\r\nconst QuoteBtn = styled.button`\r\n    width: 10vw;\r\n    height: 5vh;\r\n    margin: 2vh auto;\r\n    border-radius: 50px;\r\n`\r\n\r\n// export default QuoteGen;","\nimport React, { useState, useEffect } from \"react\";\nimport QuoteGen from \"./components/QuoteGen\";\nimport styled from 'styled-components';\n\nfunction App() {\n\n  // const handleFetch = async () => {\n  //   const response = await fetch('https://api.chucknorris.io/jokes/random');\n  //   setData([...data, response])\n  //   console.log('clicked')\n  // }\n\n  // function handleFetch() {\n  //   fetch('https://api.chucknorris.io/jokes/random')\n  //    .then(response => response.json())\n  //    .then(data => {\n  //      setQuote(data.value)\n  //    })\n  // }\n\n  return (\n    <Wrapper>\n      <QuoteGen />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 80%;\n  height: 80vh;\n  margin: 10vh auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  border: 1px solid black;\n`\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}